From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cheng Zhao <zcbenz@gmail.com>
Date: Thu, 20 Sep 2018 17:47:44 -0700
Subject: gin_enable_disable_v8_platform.patch


diff --git a/gin/isolate_holder.cc b/gin/isolate_holder.cc
index 4491b392412caac052bf9e41c70a28086ada8a17..8ec7775b78b3645dbac5ee518404ca9a70122153 100644
--- a/gin/isolate_holder.cc
+++ b/gin/isolate_holder.cc
@@ -122,9 +122,10 @@ IsolateHolder::~IsolateHolder() {
 void IsolateHolder::Initialize(ScriptMode mode,
                                V8ExtrasMode v8_extras_mode,
                                v8::ArrayBuffer::Allocator* allocator,
-                               const intptr_t* reference_table) {
+                               const intptr_t* reference_table,
+                               bool create_v8_platform) {
   CHECK(allocator);
-  V8Initializer::Initialize(mode, v8_extras_mode);
+  V8Initializer::Initialize(mode, v8_extras_mode, create_v8_platform);
   g_array_buffer_allocator = allocator;
   g_reference_table = reference_table;
 }
diff --git a/gin/public/isolate_holder.h b/gin/public/isolate_holder.h
index 6945a60181c420106b1a1defe2a2149b70a80d82..535b0caa02f89f8a0fde841057d35e3834ea087f 100644
--- a/gin/public/isolate_holder.h
+++ b/gin/public/isolate_holder.h
@@ -97,7 +97,8 @@ class GIN_EXPORT IsolateHolder {
   static void Initialize(ScriptMode mode,
                          V8ExtrasMode v8_extras_mode,
                          v8::ArrayBuffer::Allocator* allocator,
-                         const intptr_t* reference_table = nullptr);
+                         const intptr_t* reference_table = nullptr,
+                         bool create_v8_platform = true);
 
   v8::Isolate* isolate() { return isolate_; }
 
diff --git a/gin/v8_initializer.cc b/gin/v8_initializer.cc
index cf51b27dd999391e28a3d69c2694d90d61ea214f..50ba87af55fd69dcf0ade1a1736e89ae13b4482f 100644
--- a/gin/v8_initializer.cc
+++ b/gin/v8_initializer.cc
@@ -236,12 +236,14 @@ LoadV8FileResult MapOpenedFile(const OpenedFileMap::mapped_type& file_region,
 
 // static
 void V8Initializer::Initialize(IsolateHolder::ScriptMode mode,
-                               IsolateHolder::V8ExtrasMode v8_extras_mode) {
+                               IsolateHolder::V8ExtrasMode v8_extras_mode,
+                               bool create_v8_platform) {
   static bool v8_is_initialized = false;
   if (v8_is_initialized)
     return;
 
-  v8::V8::InitializePlatform(V8Platform::Get());
+  if (create_v8_platform)
+    v8::V8::InitializePlatform(V8Platform::Get());
 
   if (!base::FeatureList::IsEnabled(features::kV8OptimizeJavascript)) {
     // We avoid explicitly passing --opt if kV8OptimizeJavascript is enabled
diff --git a/gin/v8_initializer.h b/gin/v8_initializer.h
index 6f3265ba4d06e70930630432bf739f89847d0b3c..29f28bebbdcde5a7f1c7b31a625d30f1b8079c39 100644
--- a/gin/v8_initializer.h
+++ b/gin/v8_initializer.h
@@ -21,7 +21,8 @@ class GIN_EXPORT V8Initializer {
  public:
   // This should be called by IsolateHolder::Initialize().
   static void Initialize(IsolateHolder::ScriptMode mode,
-                         IsolateHolder::V8ExtrasMode v8_extras_mode);
+                         IsolateHolder::V8ExtrasMode v8_extras_mode,
+                         bool create_v8_platform = true);
 
   // Get address and size information for currently loaded snapshot.
   // If no snapshot is loaded, the return values are null for addresses
